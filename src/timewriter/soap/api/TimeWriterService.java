
package timewriter.soap.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TimeWriterService", targetNamespace = "api.timewriter.soap.nl", wsdlLocation = "http://localhost/wsdl/timewriterapi.wsdl")
public class TimeWriterService
    extends Service
{

    private final static URL TIMEWRITERSERVICE_WSDL_LOCATION;
    private final static WebServiceException TIMEWRITERSERVICE_EXCEPTION;
    private final static QName TIMEWRITERSERVICE_QNAME = new QName("api.timewriter.soap.nl", "TimeWriterService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost/wsdl/timewriterapi.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TIMEWRITERSERVICE_WSDL_LOCATION = url;
        TIMEWRITERSERVICE_EXCEPTION = e;
    }

    public TimeWriterService() {
        super(__getWsdlLocation(), TIMEWRITERSERVICE_QNAME);
    }

    public TimeWriterService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TIMEWRITERSERVICE_QNAME, features);
    }

    public TimeWriterService(URL wsdlLocation) {
        super(wsdlLocation, TIMEWRITERSERVICE_QNAME);
    }

    public TimeWriterService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TIMEWRITERSERVICE_QNAME, features);
    }

    public TimeWriterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TimeWriterService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TimeWriterServicePort
     */
    @WebEndpoint(name = "TimeWriterServicePort")
    public TimeWriterServicePort getTimeWriterServicePort() {
        return super.getPort(new QName("api.timewriter.soap.nl", "TimeWriterServicePort"), TimeWriterServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TimeWriterServicePort
     */
    @WebEndpoint(name = "TimeWriterServicePort")
    public TimeWriterServicePort getTimeWriterServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("api.timewriter.soap.nl", "TimeWriterServicePort"), TimeWriterServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TIMEWRITERSERVICE_EXCEPTION!= null) {
            throw TIMEWRITERSERVICE_EXCEPTION;
        }
        return TIMEWRITERSERVICE_WSDL_LOCATION;
    }

}
