
package timewriter.soap.api;

import timewriter.object.*;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TimeWriterServicePort", targetNamespace = "api.timewriter.soap.nl")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TimeWriterServicePort {


    /**
     * 
     * @param apiKey
     * @param softwareDesc
     * @param userKey
     * @return
     *     returns nl.soap.timewriter.api.LoginResult
     */
    @WebMethod(operationName = "Login", action = "Login")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.LoginResponse")
    public LoginResult login(
        @WebParam(name = "api_key", targetNamespace = "")
        String apiKey,
        @WebParam(name = "user_key", targetNamespace = "")
        String userKey,
        @WebParam(name = "softwareDesc", targetNamespace = "")
        String softwareDesc);

    /**
     * 
     * @param securityToken
     */
    @WebMethod(operationName = "Logout", action = "Logout")
    @Oneway
    @RequestWrapper(localName = "Logout", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.Logout")
    public void logout(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken);

    /**
     * 
     * @param securityToken
     * @param aspectType
     * @param filters
     * @return
     *     returns nl.soap.timewriter.api.GetAspectsResult
     */
    @WebMethod(operationName = "GetAspects", action = "GetAspects")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetAspects", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetAspects")
    @ResponseWrapper(localName = "GetAspectsResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetAspectsResponse")
    public GetAspectsResult getAspects(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "aspectType", targetNamespace = "")
        String aspectType,
        @WebParam(name = "filters", targetNamespace = "")
        Filters filters);

    /**
     * 
     * @param securityToken
     * @param aspect
     * @return
     *     returns nl.soap.timewriter.api.UpdateAspectResult
     */
    @WebMethod(operationName = "UpdateAspect", action = "UpdateAspect")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "UpdateAspect", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateAspect")
    @ResponseWrapper(localName = "UpdateAspectResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateAspectResponse")
    public UpdateAspectResult updateAspect(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "aspect", targetNamespace = "")
        Aspect aspect);

    /**
     * 
     * @param securityToken
     * @param id
     * @return
     *     returns nl.soap.timewriter.api.DeleteAspectResult
     */
    @WebMethod(operationName = "DeleteAspect", action = "DeleteAspect")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "DeleteAspect", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteAspect")
    @ResponseWrapper(localName = "DeleteAspectResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteAspectResponse")
    public DeleteAspectResult deleteAspect(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "id", targetNamespace = "")
        long id);

    /**
     * 
     * @param securityToken
     * @param relationType
     * @param id2
     * @param id1
     * @param filters
     * @return
     *     returns nl.soap.timewriter.api.GetRelationsResult
     */
    @WebMethod(operationName = "GetRelations", action = "GetRelations")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetRelations", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetRelations")
    @ResponseWrapper(localName = "GetRelationsResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetRelationsResponse")
    public GetRelationsResult getRelations(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "id1", targetNamespace = "")
        long id1,
        @WebParam(name = "id2", targetNamespace = "")
        long id2,
        @WebParam(name = "relationType", targetNamespace = "")
        String relationType,
        @WebParam(name = "filters", targetNamespace = "")
        Filters filters);

    /**
     * 
     * @param securityToken
     * @param relation
     * @return
     *     returns nl.soap.timewriter.api.UpdateRelationResult
     */
    @WebMethod(operationName = "UpdateRelation", action = "UpdateRelation")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "UpdateRelation", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateRelation")
    @ResponseWrapper(localName = "UpdateRelationResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateRelationResponse")
    public UpdateRelationResult updateRelation(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "relation", targetNamespace = "")
        Relation relation);

    /**
     * 
     * @param securityToken
     * @param relationType
     * @param id2
     * @param id1
     * @return
     *     returns nl.soap.timewriter.api.DeleteRelationResult
     */
    @WebMethod(operationName = "DeleteRelation", action = "DeleteRelation")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "DeleteRelation", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteRelation")
    @ResponseWrapper(localName = "DeleteRelationResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteRelationResponse")
    public DeleteRelationResult deleteRelation(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "id1", targetNamespace = "")
        long id1,
        @WebParam(name = "id2", targetNamespace = "")
        long id2,
        @WebParam(name = "relationType", targetNamespace = "")
        String relationType);

    /**
     * 
     * @param securityToken
     * @param endDate
     * @param filters
     * @param startDate
     * @return
     *     returns nl.soap.timewriter.api.GetBookingsResult
     */
    @WebMethod(operationName = "GetBookings", action = "GetBookings")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetBookings", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetBookings")
    @ResponseWrapper(localName = "GetBookingsResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.GetBookingsResponse")
    public GetBookingsResult getBookings(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "filters", targetNamespace = "")
        Filters filters);

    /**
     * 
     * @param securityToken
     * @param booking
     * @param roundTimes
     * @return
     *     returns nl.soap.timewriter.api.UpdateBookingResult
     */
    @WebMethod(operationName = "UpdateBooking", action = "UpdateBooking")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "UpdateBooking", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateBooking")
    @ResponseWrapper(localName = "UpdateBookingResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.UpdateBookingResponse")
    public UpdateBookingResult updateBooking(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "booking", targetNamespace = "")
        Booking booking,
        @WebParam(name = "roundTimes", targetNamespace = "")
        boolean roundTimes);

    /**
     * 
     * @param securityToken
     * @param id
     * @return
     *     returns nl.soap.timewriter.api.DeleteBookingResult
     */
    @WebMethod(operationName = "DeleteBooking", action = "DeleteBooking")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "DeleteBooking", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteBooking")
    @ResponseWrapper(localName = "DeleteBookingResponse", targetNamespace = "api.timewriter.soap.nl", className = "nl.soap.timewriter.api.DeleteBookingResponse")
    public DeleteBookingResult deleteBooking(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "id", targetNamespace = "")
        long id);

    /**
     * 
     * @param request
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "HelloWorld", action = "HelloWorld")
    @WebResult(name = "HelloWorldResponse", targetNamespace = "api.timewriter.soap.nl", partName = "response")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String helloWorld(
        @WebParam(name = "HelloWorldRequest", targetNamespace = "api.timewriter.soap.nl", partName = "request")
        String request);

}
